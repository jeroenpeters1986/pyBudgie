# name of our workflow
name: pyBudgie CI

# triggers for our workflow
on:
  # opening a pull request to master and develop branch will be a trigger
  pull_request:
    branches:
      - develop
      - master
  # any code pushed to master and develop branch will also be a trigger
  push:
    branches:
      - master
      - develop


# three job definition
jobs:
  test-and-coverage: # health check job for testing and code formatting check
    runs-on: ubuntu-latest # os for running the job
#    services:
#      postgres: # we need a postgres docker image to be booted a side car service to run the tests that needs a db
#        image: postgres
#        env: # the environment variable must match with app/settings.py if block of DATBASES variable otherwise test will fail due to connectivity issue.
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: github-actions
#        ports:
#          - 5432:5432 # exposing 5432 port for application to use
#        # needed because the postgres container does not provide a healthcheck
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code # checking our the code at current commit that triggers the workflow
        uses: actions/checkout@v2
      - name: Cache dependency # caching dependency will make our build faster.
        uses: actions/cache@v2 # for more info checkout pip section documentation at https://github.com/actions/cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup python environment # setting python environment to 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Check Syntax with PyLama
        run: pylama
      - name: Generate locales
        run: python manage.py compilemessages --settings=pybudgie.config.settings_ci
      - name: Run Migrations
        run: python manage.py migrate --settings=pybudgie.config.settings_ci
      - name: Run Tests
        run: python manage.py test --settings=pybudgie.config.settings_ci
